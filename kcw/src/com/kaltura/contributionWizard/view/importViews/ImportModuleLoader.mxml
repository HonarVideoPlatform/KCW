<?xml version="1.0" encoding="utf-8"?>
<!--/*
This file is part of the Kaltura Collaborative Media Suite which allows users
to do with audio, video, and animation what Wiki platfroms allow them to do with
text.

Copyright (C) 2006-2008  Kaltura Inc.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as
published by the Free Software Foundation, either version 3 of the
License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

@ignore
*/
-->
<mx:ModuleLoader
	styleName="importModuleLoader"
	width="100%" height="100%"
	preinitialize="init()"
	horizontalAlign="center" verticalAlign="middle"
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:search="com.kaltura.contributionWizard.view.importViews.search.*"
	implements="com.kaltura.contributionWizard.view.importViews.IImportModule, com.kaltura.utils.IDisposable"
	xmlns:browser="com.kaltura.contributionWizard.view.importViews.browser.*">
	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import com.kaltura.contributionWizard.model.WizardModelLocator;
			import mx.binding.utils.BindingUtils;
			import com.kaltura.contributionWizard.view.importViews.browser.NavigationButtonsMode;
			import flash.utils.setTimeout;
			import com.kaltura.contributionWizard.vo.providers.MediaProviderVO;
			import mx.modules.ModuleManager;
			import mx.events.FlexEvent;
			import mx.controls.ProgressBar;
			import com.kaltura.contributionWizard.view.resources.ResourceBundleNames;
			import mx.core.UIComponent;
			import mx.modules.Module;
			import mx.controls.Alert;
			import mx.events.ModuleEvent;

			[Bindable]
			private var _importView:IImportModule;

			private var _delayedActivation:Boolean;

			[Bindable]
			private var _activeMediaProviderVo:MediaProviderVO;

			private function init():void
			{
				this.addEventListener(ModuleEvent.ERROR, moduleErrorHandler);
				this.addEventListener(ModuleEvent.READY, moduleReadyHandler);
			}

			public function activate():void
			{
				 if (_importView)
				{
					_importView.activate();
 				}
				else
				{
					_delayedActivation = true;
				}

			}

			public function mediaProviderChange(mediaProviderVo:MediaProviderVO):void
			{
				_activeMediaProviderVo = mediaProviderVo;
				if (_importView)
				{
					_importView.mediaProviderChange(mediaProviderVo);
				}
			}

			public function goNextStep():void
			{
				_importView.goNextStep();
			}

			public function goPrevStep():void
			{
				_importView.goPrevStep();
			}

			public function deactivate():void
			{
				if (_importView)
				{
					_importView.deactivate();
				}
				else
				{
					_delayedActivation = false;
				}

			}

			public function dispose():void
			{
				_importView.dispose();
			}

			[Bindable]
			public function get navigationButtonsMode():NavigationButtonsMode
			{
				return _navigationButtonsMode;
			}

			public function set navigationButtonsMode(value:NavigationButtonsMode):void
			{
				_navigationButtonsMode = value;
			}

			public function get importItems():ArrayCollection
			{
				return null;
			}

			public function set importItems(value:ArrayCollection):void
			{

			}

			private var _navigationButtonsMode:NavigationButtonsMode

			private function moduleErrorHandler(evt:ModuleEvent):void
			{
				Alert.show(evt.toString());
			}

			private function moduleReadyHandler(evt:ModuleEvent):void
			{
				this.removeChild(progressBar);
				setLayout();

				if (_delayedActivation)
				{
					_importView = child as IImportModule;
					_importView.activate();
					Module(child).addEventListener(FlexEvent.CREATION_COMPLETE, childCreationCompleteHandler);

					//BindingUtils.bindProperty(this, "navigationButtonsMode", _importView, "navigationButtonsMode");
					ImportModule(_importView).addEventListener("navigationButtonsModeChange",
						function(e:Event):void{
							dispatchEvent(new Event("navigationButtonsModeChange") )
						}
					);
					
					BindingUtils.bindProperty(_importView, "importItems", WizardModelLocator.getInstance(), ["importData", "importCart", "importItemsArray"]);
				}

			}

			private function setLayout():void
			{
				(child as Module).percentWidth = 100;
				(child as Module).percentHeight = 100;
			}

			private function childCreationCompleteHandler(evtCreationComplete:FlexEvent):void
			{
				if (_delayedActivation && stage)
				{
					//_importView.activate();
					mediaProviderChange(_activeMediaProviderVo);
					//_importView.mediaProviderChange(_activeMediaProviderVo);
				}
			}
		]]>
	</mx:Script>

	<mx:Binding destination="navigationButtonsMode" source="_importView.navigationButtonsMode" />
	<mx:ProgressBar id="progressBar" source="{this}" mode="event" complete="moduleReadyHandler(null)" />
</mx:ModuleLoader>
