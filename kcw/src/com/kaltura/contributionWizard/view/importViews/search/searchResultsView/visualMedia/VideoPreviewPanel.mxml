<?xml version="1.0" encoding="utf-8"?>
<!--/*
This file is part of the Kaltura Collaborative Media Suite which allows users
to do with audio, video, and animation what Wiki platfroms allow them to do with
text.

Copyright (C) 2006-2008  Kaltura Inc.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as
published by the Free Software Foundation, either version 3 of the
License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

@ignore
*/
-->
<mx:TitleWindow
	creationComplete="init()"
	title="{importUrlVo.metaData.title || ''}" styleName="videoPreview" titleStyleName="videoPreviewTitle"
	horizontalAlign="center" showCloseButton="true" close="closeMe()"
	xmlns:audio="com.kaltura.contributionWizard.view.importViews.search.searchResultsView.audio.*"
	xmlns:searchResultsView="com.kaltura.contributionWizard.view.importViews.search.searchResultsView.*"
	xmlns:mx="http://www.adobe.com/2006/mxml" height="346" width="414" xmlns:filters="flash.filters.*" xmlns:spinner="com.grakl.spinner.*">
	<mx:Script>
		<![CDATA[
			import com.kaltura.vo.importees.ImportURLVO;
			
			import mx.events.VideoEvent;
			import mx.managers.PopUpManager;

			[Bindable]
			public var importUrlVo:ImportURLVO;
			private static const CLOSE_BUTTON_SIZE:int = 20;

			private function init():void
			{
				this.titleTextField.width = this.titleTextField.width - CLOSE_BUTTON_SIZE;
				this.titleTextField.truncateToFit();
			}

			private function closeMe():void
			{
				PopUpManager.removePopUp(this);
				videoDisplay.close();
			}

			private function playPauseButtonClickHandler():void
			{
				if (videoDisplay.playing)
				{
					videoDisplay.pause();
					playPauseButton.label = "Play";
				}
				else
				{
					videoDisplay.play();
					playPauseButton.label = "Pause";
				}
			}

			private function showControlPanel():void
			{
				fadeIn.play([controlPanel]);
			}

			private function hideControlPanel():void
			{
				fadeOut.play([controlPanel]);
			}

			private function stopButtonClickHandler():void
			{
				videoDisplay.stop();
				playPauseButton.label = "Play"
			}

			private function videoDisplayPlayheadUpdate(evt:VideoEvent):void
			{
				var playheadTime:Date = new Date(videoDisplay.playheadTime * 1000 || 100);
				var totalMilliseconds:int = videoDisplay.totalTime * 1000;
				if (totalMilliseconds < 0) totalMilliseconds = 100;
				var totalTimeTime:Date = new Date(totalMilliseconds);
				timeLabel.text = playHeadTimeFormatter.format(playheadTime) + " / " + playHeadTimeFormatter.format(totalTimeTime);
			}

			private function videoStateChangeHandler(event:VideoEvent):void
			{
				trace("event.type: " + event.state)
				switch (event.state)
				{
					case VideoEvent.BUFFERING:
						currentState = VideoEvent.BUFFERING;
					break;

					default:
						currentState = VideoEvent.PLAYING
					break;
				}

			}
		]]>
	</mx:Script>

	<mx:states>
		<mx:State name="{VideoEvent.BUFFERING}">
			<mx:AddChild relativeTo="{videoContainer}" position="lastChild">
				<spinner:Spinner horizontalCenter="0" verticalCenter="0" tickColor="white" />
			</mx:AddChild>
		</mx:State>

		<!--base state-->
		<mx:State name="{VideoEvent.PLAYING}" />
	</mx:states>

	<mx:Fade id="fadeIn" alphaTo="1" />
	<mx:Fade id="fadeOut" alphaTo="0" />

	<mx:DateFormatter id="playHeadTimeFormatter" formatString="NN:SS" />
	<!--visible components-->
	<!--<mx:Label text="{importUrlVo.metaData.title || ''}" fontSize="18" truncateToFit="true" /> -->

	<mx:Canvas id="videoContainer" rollOver="showControlPanel()" rollOut="hideControlPanel()">
		<mx:VideoDisplay id="videoDisplay"
			stateChange="videoStateChangeHandler(event)"
			complete="stopButtonClickHandler()"
			source="{importUrlVo.fileUrl}" autoPlay="true"
			width="380" height="285"
			playheadUpdate="videoDisplayPlayheadUpdate(event)" />

		<mx:HBox id="controlPanel" styleName="playerControlPanel" alpha="0" horizontalAlign="center" verticalAlign="middle" >
			<mx:Button id="playPauseButton" label="Pause" click="playPauseButtonClickHandler()" />

			<mx:Button label="Stop" click="stopButtonClickHandler()" />

			<mx:Spacer width="100%" />

			<mx:Label id="timeLabel" />

		</mx:HBox>

	</mx:Canvas>

</mx:TitleWindow>