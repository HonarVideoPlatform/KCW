<?xml version="1.0" encoding="utf-8"?>
<!--/*
This file is part of the Kaltura Collaborative Media Suite which allows users
to do with audio, video, and animation what Wiki platfroms allow them to do with
text.

Copyright (C) 2006-2008  Kaltura Inc.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as
published by the Free Software Foundation, either version 3 of the
License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

@ignore
*/
-->
<mx:Module
	creationComplete="creationCompleteHandler()"
	width="100%" height="100%"
	verticalScrollPolicy="off" horizontalScrollPolicy="off"
	implements="com.kaltura.contributionWizard.view.importViews.IImportModule"
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:search="com.kaltura.contributionWizard.view.importViews.search.*"
	xmlns:searchResultsView="com.kaltura.contributionWizard.view.importViews.search.searchResultsView.*"
	xmlns:controller="com.kaltura.contributionWizard.view.controller.*"
	xmlns:filters="flash.filters.*"
	xmlns:controls="com.kaltura.contributionWizard.view.importViews.search.controls.*" xmlns:ac="com.adobe.ac.*" xmlns:control="com.kaltura.contributionWizard.control.*">

	<mx:Script>
		<![CDATA[
			import mx.controls.Button;
			import com.arc90.modular.CairngormEventDispatcherFactory;
			import com.kaltura.contributionWizard.view.resources.ResourceBundleNames;
			import com.kaltura.contributionWizard.command.ToggleAuthMethodCommand;
			import mx.events.CloseEvent;
			import com.kaltura.contributionWizard.events.AuthMethodEvent;
			import mx.core.IFlexDisplayObject;
			import mx.core.Application;
			import mx.controls.Alert;
			import com.kaltura.contributionWizard.vo.PageSearchDirection;
			import com.kaltura.contributionWizard.events.SearchMediaEvent;
			import mx.managers.PopUpManager;
			import com.kaltura.contributionWizard.view.events.AuthenticatedSearchViewEvent;
			import com.kaltura.contributionWizard.events.MediaInfoEvent;
			import com.kaltura.contributionWizard.view.events.ImportViewCompleteEvent;
			import mx.core.UIComponent;
			import com.kaltura.contributionWizard.view.importViews.IImportModule;
			import com.kaltura.contributionWizard.model.WizardModelLocator;
			[Bindable]
			protected var model:WizardModelLocator = WizardModelLocator.getInstance();

			private var _subComponents:Array;
			private var _headerChildren:Array;
			private var _searchControlsList:Array;
			//-----------------------------interface methods------------------------------------------
			public function goNextStep():void
			{

			}

			public function goPrevStep():void
			{
				//do nothing
			}

			public function activate():void
			{

			}

			public function deactivate():void
			{
			}

			public function dispose():void
			{

			}
			//----------------------------- end interface methods------------------------------------------

			public function set subComponents(subComponentsList:Array):void
			{
				_subComponents = subComponentsList
			}
			public function get subComponents():Array
			{
				return _subComponents;
			}

			public function set headerChildren(headerChildren:Array):void
			{
				_headerChildren = headerChildren;
			}
			public function get headerChildren():Array
			{
				return _headerChildren;
			}

			public function set searchControlsChildren(searchControls:Array):void
			{
				_searchControlsList = searchControls;
			}
			public function get searchControlsChildren():Array
			{
				return _searchControlsList;
			}

			protected function dispatchImportViewComplete():void
			{
				dispatchEvent(new ImportViewCompleteEvent(ImportViewCompleteEvent.IMPORT_VIEW_COMPLETE));
			}

			protected function dispatchCairngormSearchRequest(pageDirection:int):void
			{
				var evtSearchMedia:SearchMediaEvent = new SearchMediaEvent(SearchMediaEvent.SEARCH_MEDIA, pageDirection, null, this);
				CairngormEventDispatcherFactory.getDispatcher(this).dispatchEvent(evtSearchMedia);
			}

			private function creationCompleteHandler():void
			{
				addSubComponents();
				addHeader();
				searchControls.customControls = _searchControlsList;
			}

			private function addSubComponents():void
			{
				addComponents(subComponentsContainer, _subComponents);
			}

			private function addHeader():void
			{
				addComponents(headerContainer, _headerChildren);
			}

			private function addComponents(container:UIComponent, children:Array):void
			{
				if (!children) return;
				for each(var subComponent:UIComponent in children)
				{
					container.addChild(subComponent);
				}
			}


			//toggleAuthMethod="toggleAuthMethodHandler()"
		]]>
	</mx:Script>
	<!--Cairngorm controller-->
	<control:BaseSearchController />

	<!--Visible components -->


</mx:Module>